# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    resiliency_config:
        timeout: 3
        stripped_timeout: 2
        failures: 2
        threshold: 1000

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # import classes in Resiliency package
    Resiliency\:
        resource: '../vendor/love-oss/resiliency/src/*'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    #Resiliency\Contracts\CircuitBreaker: 'Resiliency\MainCircuitBreaker'
    Psr\EventDispatcher\EventDispatcherInterface: '@event_dispatcher'
    Resiliency\Contracts\System:
        factory: 'App\Resiliency\System\SystemFactory:createSystem'
        arguments: ['%resiliency_config%', '@Resiliency\Clients\GuzzleClient']

    Psr\SimpleCache\CacheInterface $symfonyCache: '@cache.adapter.filesystem'
    Resiliency\Contracts\Storage: '@Resiliency\Storages\SymfonyCache'

    App\Resiliency\DataCollector\ResiliencyCollector:
        tags:
            - name:     data_collector
              template: 'data_collector/template.html.twig'
              id:       'resiliency.collector'
        public: false